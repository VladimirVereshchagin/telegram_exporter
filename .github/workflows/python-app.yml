name: Python CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Create .env file
      run: |
        echo "API_ID=${{ secrets.TELEGRAM_API_ID }}" >> .env
        echo "API_HASH=${{ secrets.TELEGRAM_API_HASH }}" >> .env
        echo "PHONE=${{ secrets.TELEGRAM_PHONE }}" >> .env

    - name: Lint with flake8
      run: pip install flake8 && flake8 telegram_exporter tests

    - name: Run tests
      run: python -m unittest discover tests

    - name: Test coverage report
      run: |
        pip install coverage
        coverage run -m unittest discover tests
        coverage report

    - name: Log in to DockerHub
      if: github.ref_name == 'main' || github.ref_name == 'new-feature'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Set up QEMU
      if: github.ref_name == 'main' || github.ref_name == 'new-feature'
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      if: github.ref_name == 'main' || github.ref_name == 'new-feature'
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      if: github.ref_name == 'main' || github.ref_name == 'new-feature'
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/telegram_exporter:latest